程序功能说明
=============

本文档详细说明 web-application-code 目录下两个主要分析脚本的功能。

文件列表:
- analyze_coverage.py: 覆盖率分析脚本
- analyze.py: 综合性能分析脚本

========================================
1. analyze_coverage.py 功能说明
========================================

主要功能: 专注于Web应用测试的覆盖率深度分析

1.1 命令行参数解析
- --app-name: 指定要分析的Web应用名称
- --results-folder-name: 包含测试结果的根目录名称
- --coverage-type: 覆盖率计算方式选择

1.2 覆盖率统计计算
- 读取测试结果文件中的覆盖率数据
- 计算不同测试方法的覆盖率指标
- 分析困难目标(hard targets)统计
- 识别独特覆盖目标(unique targets)

1.3 Excel报表生成
- 创建包含"Complexity"和"Statistics"工作表的Excel文件
- 记录覆盖率、困难目标、独特目标等统计指标
- 包含统计显著性检验结果

1.4 统计显著性分析
- 使用Wilcoxon检验计算p值
- 使用Vargha-Delaney方法计算效应大小
- 比较不同测试方法之间的统计差异
- 生成详细的统计检验报告

========================================
2. analyze.py 功能说明
========================================

主要功能: 提供Web应用测试结果的综合性能分析

2.1 命令行参数解析
- --app-name: 应用名称
- --results-folder-name: 结果文件夹名称
- --raw-coverage-targets: 原始覆盖率目标选项
- --percentage-iterations: 用于计算效率的迭代比例

2.2 数据加载和处理
- 加载覆盖目标文件
- 读取所有测试方法的JSON结果文件
- 统一数据长度以便比较

2.3 可视化图表生成
- 覆盖率随时间变化图: 显示不同测试方法的覆盖率增长趋势
- 放大视图覆盖率图: 聚焦特定迭代区间的覆盖率变化
- 测试长度变化图: 显示测试用例长度随时间的平滑变化

2.4 效率指标计算
- AUC(曲线下面积): 衡量测试效率的综合指标
- 指定迭代次数的AUC: 在特定迭代比例下的效率评估
- 覆盖率、测试数量、执行时间等基础指标

2.5 Excel报表生成
- "RQs"工作表: 记录覆盖率、AUC、效率等研究问题相关指标
- "Others"工作表: 记录测试数量、长度、执行时间等其他指标
- 统计分析工作表: 包含覆盖率、效率的统计检验结果

2.6 统计显著性分析
- 使用Wilcoxon非配对检验计算p值
- 使用Vargha-Delaney方法计算效应大小
- 比较所有测试方法两两之间的统计差异

========================================
3. 两个文件的区别和联系
========================================

3.1 主要区别
- analyze_coverage.py: 专注于覆盖率的深度分析，特别是困难目标和独特目标
- analyze.py: 提供综合性能分析，包括覆盖率、效率、测试长度等多维度指标

3.2 联系和互补
- 两个文件共同构成完整的Web应用测试结果分析系统
- analyze_coverage.py提供详细的覆盖率分析
- analyze.py提供全面的性能评估
- 可以结合使用以获得完整的测试效果评估

========================================
4. 使用场景
========================================

4.1 analyze_coverage.py适用场景
- 需要深度分析测试覆盖率时
- 关注困难目标和独特目标时
- 进行详细的统计显著性检验时

4.2 analyze.py适用场景
- 需要全面评估测试性能时
- 需要可视化展示测试效果时
- 需要综合比较不同测试方法时
- 生成研究报告和图表时

========================================
5. 输出文件说明
========================================

5.1 analyze_coverage.py生成的文件
- analyze_coverage.log: 分析日志文件
- table_coverage.xlsx: 包含覆盖率统计的Excel文件

5.2 analyze.py生成的文件
- analyze.log: 分析日志文件
- table_metrics.xlsx: 包含性能指标的Excel文件
- table_statistics.xlsx: 包含统计检验结果的Excel文件
- coverage_over_time_*.svg: 覆盖率变化图
- coverage_over_time_zoom_*.svg: 放大视图覆盖率图
- length_over_time_*.svg: 测试长度变化图

========================================
6. 运行方式
========================================

6.1 直接运行单个脚本
- python analyze_coverage.py --app-name dimeshift --results-folder-name results
- python analyze.py --app-name dimeshift --results-folder-name results --percentage-iterations 50

6.2 使用批量分析脚本
- ./run_analysis.sh -r dimeshift -p 50

